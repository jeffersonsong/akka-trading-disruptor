<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.patriknw</groupId>
	<artifactId>akka-sample-trading</artifactId>
	<version>1.1.3-SNAPSHOT</version>
	<name>Scala Akka Trading Sample</name>
	<packaging>jar</packaging>
	<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<scala.version>2.9.3</scala.version>
		<akka.version>1.1.3</akka.version>
	</properties>
  <distributionManagement>
      <!-- Use -DaltDeploymentRepository when deploying, as described here:
        http://cemerick.com/2010/08/24/hosting-maven-repos-on-github/
        mvn deploy -DaltDeploymentRepository=akka-sample-trading-repo::default::file:/Users/patrik/dev/akka-sample-trading/releases
      -->
      <repository>
          <id>akka-sample-trading-repo</id>
          <url>https://github.com/patriknw/akka-sample-trading/raw/master/releases</url>
      </repository>
  </distributionManagement>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scalaVersion>${scala.version}</scalaVersion>
					<args>
                        <arg>-target:jvm-1.5</arg>
                        <arg>-optimise</arg>
                    </args>
                    <compilerPlugins>
                        <compilerPlugin>
                            <groupId>org.scala-lang.plugins</groupId>
                            <artifactId>continuations</artifactId>
                            <version>${scala.version}</version>
                        </compilerPlugin>
                    </compilerPlugins>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-jar-plugin</artifactId>
               <version>2.2</version>
               <executions>
                 <execution>
                   <goals>
                     <goal>test-jar</goal>
                   </goals>
                 </execution>
               </executions>
            </plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<forkMode>always</forkMode>
					<!-- scala actors thread pool can be configured with
						-Dactors.corePoolSize=4 -Dactors.maxPoolSize=16
					 -->
					<argLine>-server -Xms512m -Xmx1024m -XX:+UseConcMarkSweepGC -Dbenchmark=false -Dbenchmark.minClients=1 -Dbenchmark.maxClients=40 -Dbenchmark.useDummyOrderbook=true -Dbenchmark.repeatFactor=10 -Dbenchmark.warmupRepeatFactor=10 -Dbenchmark.resultDir=target/benchmark</argLine>
					<!-- 
					<includes>
						<include>**/AkkaPerformanceTest.*</include>
						<include>**/AkkaBangPerformanceTest.*</include>
					</includes>
					 -->
					<excludes>
			            <exclude>**/AllBenchmarkTests.java</exclude>
					</excludes>
				</configuration>
				
			</plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<testOutputDirectory>target/test-classes</testOutputDirectory>
					<classpathContainers>
						<classpathContainer>org.scala-ide.sdt.launching.SCALA_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
					</classpathContainers>
					<buildcommands>
						<buildcommand>org.scala-ide.sdt.core.scalabuilder</buildcommand>
					</buildcommands>
					<additionalProjectnatures>
						<projectnature>org.scala-ide.sdt.core.scalanature</projectnature>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>
			<plugin>
		        <artifactId>maven-assembly-plugin</artifactId>
		        <version>2.2-beta-5</version>
		        <configuration>
		          <descriptors>
		            <descriptor>src/main/assembly/dist.xml</descriptor>
		          </descriptors>
		        </configuration>
			</plugin>
		</plugins>

	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<configuration>
					<scalaVersion>${scala.version}</scalaVersion>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<dependencies>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<!-- <scope>test</scope>  -->
		</dependency>
		<dependency>
			<groupId>org.scala-tools.testing</groupId>
			<artifactId>specs</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>akka-actor</artifactId>
		    <groupId>se.scalablesolutions.akka</groupId>
		    <version>${akka.version}</version>
    	</dependency>
    	<dependency>
	    	<groupId>se.scalablesolutions.akka</groupId>
		    <artifactId>akka-dispatcher-extras</artifactId>
		    <version>${akka.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.fusesource.hawtdispatch</groupId>
		    <artifactId>hawtdispatch-scala</artifactId>
		    <version>1.4</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.disruptor</groupId>
			<artifactId>disruptor</artifactId>
			<version>2.7.1</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
		  <id>Typesafe</id>
		  <name>Typesafe Repository</name>
		  <url>http://repo.typesafe.com/typesafe/releases</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>Typesafe</id>
			<name>Typesafe Repository</name>
			<url>http://repo.typesafe.com/typesafe/releases</url>
		</pluginRepository>
	</pluginRepositories>
</project>	
